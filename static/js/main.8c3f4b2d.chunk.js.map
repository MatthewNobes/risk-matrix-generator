{"version":3,"sources":["Components/BinaryRiskMatrix/Impact.js","Components/BinaryRiskMatrix/Likelihood.js","Components/BinaryRiskMatrix/Risk.js","Components/BinaryRiskMatrix/BinaryRiskMatrixForm.js","Components/BinaryRiskMatrix/BinaryRiskMatrix.js","App.js","reportWebVitals.js","index.js"],"names":["calculateHarmCapacity","Q7","Q8","calculateImpactValidation","harmCapacity","Q9","Q10","calculateImpact","values","impactValuation","calculateThreatScope","Q1","Q2","calculateProtectionWeakness","threatScore","Q3","Q4","calculateAttackEfficiency","protectionWeakness","calculateOccurrence","attackEfficiency","Q5","Q6","calculateLikelihood","occurrence","calculateRisk","threatLikelihood","threatImpact","BinaryRiskMatrixForm","useState","appendQ1","appendQ2","appendQ3","appendQ4","appendQ5","appendQ6","appendQ7","appendQ8","appendQ9","appendQ10","risk","appendRisk","likelihood","appendLikelihood","impact","appendImpact","appendHarmCapacity","appendImpactValuation","appendThreatScore","appendProtectionWeakness","appendAttackEfficiency","appendOccurrence","handleChange","value","appendFn","className","onSubmit","e","preventDefault","likelihoodResults","impactResults","handleSubmit","type","id","onChange","for","style","color","BinaryRiskMatrix","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c3f4b2d.chunk.js","sourcesContent":["/**\n * \n * @param {string[]} values An array of the users answers for the questions on the binary risk matrix.\n * @returns {string} Threat Impact\n */\nconst calculateImpact = (values) => {\n    const harmCapacity = calculateHarmCapacity(values[6], values[7]);\n    const impactValuation = calculateImpactValidation(harmCapacity, values[8], values[9]);\n    \n    const threatImpact = impactValuation;\n    const impactResults = [harmCapacity, impactValuation, threatImpact]; \n    return impactResults;\n}\n\n/**\n * \n * @param {boolean} Q7 The value of question 7, as set by the user.\n * @param {boolean} Q8 The value of question 8, as set by the user.\n * @returns {string} Harm Capacity \n */\nconst calculateHarmCapacity = (Q7, Q8) => {\n    if (Q7 === true && Q8 === true){\n        return 'High';\n    } else {\n        if (Q7 === true || Q8 === true) {\n            return 'Medium';\n        } else {\n            return 'Low';\n        }\n    }\n}\n\n/**\n * \n * @param {string} harmCapacity \n * @param {boolean} Q9 The value of question 9, as set by the user.\n * @param {boolean} Q10 The value of question 10, as set by the user.\n * @returns {string} Impact Validation \n */\nconst calculateImpactValidation = (harmCapacity, Q9, Q10) => {\n    if (Q9 === false && Q10 === false) {\n        if (harmCapacity === 'High') {\n            return 'Medium';\n        } else {\n            return 'Low';\n        }\n    } else {\n        if (Q9 === true && Q10 === true){\n            if (harmCapacity === 'Low') {\n                return 'Medium';\n            } else {\n                return 'High';\n            }\n        } else {\n            if (Q9 === true || Q10 === true) {\n                return harmCapacity;\n            }\n        }\n    }\n}\n\nexport default calculateImpact;","/**\n * \n * @param {boolean[]} values The users selected values for the questions in the binary risk matrix. \n * @returns {string} The threat likelihood.\n */\nconst calculateLikelihood = (values) => {\n    const threatScore = calculateThreatScope(values[0], values[1]);\n    const protectionWeakness = calculateProtectionWeakness(threatScore, values[2], values[3]);\n    const attackEfficiency = calculateAttackEfficiency(protectionWeakness);\n    const occurrence = calculateOccurrence(attackEfficiency, values[4], values[5]);\n\n    const threatLikelihood = occurrence;\n    const likelihoodResults = [threatScore, protectionWeakness, attackEfficiency, occurrence, threatLikelihood]; \n    return likelihoodResults;\n}\n\n/**\n * \n * @param {boolean} Q1 The users answer for Q1.\n * @param {boolean} Q2 The users answer for Q2.\n * @returns {string} The threat scope\n */\nconst calculateThreatScope = (Q1, Q2) => {\n    if (Q1 === true && Q2 === true) {\n        return 'High'\n    } else {\n        if (Q1 === true || Q2 === true) {\n            return 'Medium';\n        } else {\n            return 'Low';\n        }\n    }\n}\n\n/**\n * \n * @param {string} threatScore \n * @param {boolean} Q3 \n * @param {boolean} Q4 \n * @returns {string} The protection weakness\n */\nconst calculateProtectionWeakness = (threatScore, Q3, Q4) => {\n    if (Q3 === true && Q4 === true) {\n        if (threatScore === 'Low'){\n            return 'Medium';\n        } else {\n            return 'High';\n        }\n    } else {\n        if (Q3 === true || Q4 === true) {\n            return threatScore;\n        } else {\n            if (threatScore === 'High') {\n                return 'Medium';\n            } else {\n                return 'Low';\n            }\n        }\n    }\n}\n\n/**\n * \n * @param {string} protectionWeakness The protection weakness (see calculateProtectionWeakness)\n * @returns {string} The attack efficiency \n */\nconst calculateAttackEfficiency = (protectionWeakness) => {\n    return protectionWeakness;\n}\n\n/**\n * \n * @param {string} attackEfficiency The attack efficiency\n * @param {boolean} Q5 The answer to Q5.\n * @param {boolean} Q6 The answer to Q6.\n * @returns {string} The threat occurrence \n */\nconst calculateOccurrence = (attackEfficiency, Q5, Q6) => {\n    if (Q5 === true && Q6 === true) {\n        if (attackEfficiency === 'Low'){\n            return 'Medium';\n        } else {\n            return 'High';\n        }\n    } else {\n        if (Q5 === true || Q6 === true) {\n            return attackEfficiency;\n        } else {\n            if (attackEfficiency === 'High') {\n                return 'Medium';\n            } else {\n                return 'Low';\n            }\n        }\n    }\n}\n\nexport default calculateLikelihood;","/**\n * This function determines the overall risk combining everything else calculated.\n * @param {string} threatLikelihood The threat likelihood.\n * @param {string} threatImpact The threat impact.\n * @returns {string} The overall risk.\n */\nconst calculateRisk = (threatLikelihood, threatImpact) => {\n    if (threatImpact === threatLikelihood) {\n        return threatLikelihood;\n    } else {\n        if ((threatLikelihood === 'High' && threatImpact === 'Medium') || (threatLikelihood === 'Medium' && threatImpact === 'High')) {\n            return 'High';\n        } else {\n            if ((threatLikelihood === 'High' && threatImpact === 'Low') || (threatLikelihood === 'Low' && threatImpact === 'Medium') || (threatLikelihood === 'Low' && threatImpact === 'High')){\n                return 'Medium';\n            } else {\n                return 'Low';\n            }\n        }\n    }\n}\n\nexport default calculateRisk;","import { useState } from 'react';\nimport '../../css/App.css';\n\nimport calculateImpact from './Impact';\nimport calculateLikelihood from './Likelihood';\nimport calculateRisk from './Risk';\n\nexport default function BinaryRiskMatrixForm() {\n    \n    const [Q1, appendQ1] = useState(false);\n    const [Q2, appendQ2] = useState(false);\n    const [Q3, appendQ3] = useState(false);\n    const [Q4, appendQ4] = useState(false);\n    const [Q5, appendQ5] = useState(false);\n    const [Q6, appendQ6] = useState(false);\n    const [Q7, appendQ7] = useState(false);\n    const [Q8, appendQ8] = useState(false);\n    const [Q9, appendQ9] = useState(false);\n    const [Q10, appendQ10] = useState(false);\n\n    const [risk, appendRisk] = useState('Low');\n    const [likelihood, appendLikelihood] = useState('Low');\n    const [impact, appendImpact] = useState('Low');\n\n    const [harmCapacity, appendHarmCapacity] = useState('Low');\n    const [impactValuation, appendImpactValuation] = useState('Low');\n\n    const [threatScore, appendThreatScore] = useState('Low');\n    const [protectionWeakness, appendProtectionWeakness] = useState('Low');\n    const [attackEfficiency, appendAttackEfficiency] = useState('Low');\n    const [occurrence, appendOccurrence] = useState('Low');\n\n    const handleChange = (value, appendFn) => {\n        appendFn(!value);   \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        debugger;\n\n        const values = [Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10];\n        const likelihoodResults = calculateLikelihood(values);\n        const impactResults = calculateImpact(values);\n        const risk = calculateRisk(likelihood, impactResults[2]);\n\n        appendHarmCapacity(impactResults[0]);\n        appendImpactValuation(impactResults[1]);\n\n        appendThreatScore(likelihoodResults[0]);\n        appendProtectionWeakness(likelihoodResults[1]);\n        appendAttackEfficiency(likelihoodResults[2]);\n        appendOccurrence(likelihoodResults[3]);\n\n        appendRisk(risk);\n        appendLikelihood(likelihoodResults[4]);\n        appendImpact(impactResults[2]);\n    }\n    \n    return (\n        <div className=\"BinaryRiskMatrix\">\n            <form className=\"BinaryRiskMatrixForm\" onSubmit={(e) => handleSubmit(e)}> \n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q1' value={Q1} onChange={() => handleChange(Q1, appendQ1)}/>\n                    <label for='Q1'>Q1: Can the attack be completed with common skills?</label>\n                </div>\n                \n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q2' value={Q2} onChange={() => handleChange(Q2, appendQ2)}/>\n                    <label for='Q2'>Q2: Can the attack be completed without significant resources?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q3' value={Q3} onChange={() => handleChange(Q3, appendQ3)}/>\n                    <label for='Q3'>Q3: Is the asset undefended?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q4' value={Q4} onChange={() => handleChange(Q4, appendQ4)}/>\n                    <label for='Q4'>Q4: Are there weaknesses in the current defences?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q5' value={Q5} onChange={() => handleChange(Q5, appendQ5)}/>\n                    <label for='Q5'>Q5: Is the vulnerability always present in the asset?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q6' value={Q6} onChange={() => handleChange(Q6, appendQ6)}/>\n                    <label for='Q6'>Q6: Can the attack be performed without meeting any significant preconditions?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q7' value={Q7} onChange={() => handleChange(Q7, appendQ7)}/>\n                    <label for='Q7'>Q7: Will there be consequences from internal sources? (e.g. explain to company board)</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q8' value={Q8} onChange={() => handleChange(Q8, appendQ8)}/>\n                    <label for='Q8'>Q8: Will there be consequences from external sources? (e.g. disclose to clients data theft)</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q9' value={Q9} onChange={() => handleChange(Q9, appendQ9)}/>\n                    <label for='Q9'>Q9: Does the asset have a significant business value?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q10' value={Q10} onChange={() => handleChange(Q10, appendQ10)}/>\n                    <label for='Q10'>Q10: Will the asset have a significant cost of repair or replacement?</label>\n                </div>\n                <div className=\"BinaryRiskMatrixForm-Submit\">\n                    <button className=\"BinaryRiskMatrixForm-SubmitButton\" type=\"submit\">Submit</button>\n                </div>\n            </form>\n\n            <div className=\"BinaryRiskMatrixResults\">\n                <h2 \n                    className=\"BinaryRiskMatrixResults-Measurement\"\n                    style={{color: risk === 'Low' ? 'Green' : risk === 'Medium' ? 'Orange' : 'Red'}}\n                >\n                    Risk: {risk}\n                </h2>\n                \n\n                <h2 \n                    className=\"BinaryRiskMatrixResults-Measurement\"\n                    style={{color: likelihood === 'Low' ? 'Green' : likelihood === 'Medium' ? 'Orange' : 'Red'}}\n                >\n                    Likelihood: {likelihood}\n                </h2>\n                <ul>\n                    <h3 \n                        className=\"BinaryRiskMatrixResults-Measurement\"\n                        style={{color: threatScore === 'Low' ? 'Green' : threatScore === 'Medium' ? 'Orange' : 'Red'}}\n                    >\n                        Threat Score: {threatScore}\n                    </h3>\n                    <h3 \n                        className=\"BinaryRiskMatrixResults-Measurement\"\n                        style={{color: protectionWeakness === 'Low' ? 'Green' : protectionWeakness === 'Medium' ? 'Orange' : 'Red'}}\n                    >\n                        Protection Weakness: {protectionWeakness}\n                    </h3>\n                    <h3 \n                        className=\"BinaryRiskMatrixResults-Measurement\"\n                        style={{color: attackEfficiency === 'Low' ? 'Green' : attackEfficiency === 'Medium' ? 'Orange' : 'Red'}}\n                    >\n                        Attack Efficiency: {attackEfficiency}\n                    </h3>\n                    <h3 \n                        className=\"BinaryRiskMatrixResults-Measurement\"\n                        style={{color: occurrence === 'Low' ? 'Green' : occurrence === 'Medium' ? 'Orange' : 'Red'}}\n                    >\n                        Occurrence: {occurrence}\n                    </h3>\n                </ul>\n\n                <h2 \n                    className=\"BinaryRiskMatrixResults-Measurement\"\n                    style={{color: impact === 'Low' ? 'Green' : impact === 'Medium' ? 'Orange' : 'Red'}}\n                >\n                    Impact: {impact}\n                </h2>\n                <ul>\n                    <h3 \n                        className=\"BinaryRiskMatrixResults-Measurement\"\n                        style={{color: harmCapacity === 'Low' ? 'Green' : harmCapacity === 'Medium' ? 'Orange' : 'Red'}}\n                    >\n                        Harm Capacity: {harmCapacity}\n                    </h3>\n                    <h3 \n                        className=\"BinaryRiskMatrixResults-Measurement\"\n                        style={{color: impactValuation === 'Low' ? 'Green' : impactValuation === 'Medium' ? 'Orange' : 'Red'}}\n                    >\n                        Impact Valuation: {impactValuation}\n                    </h3>\n                </ul>\n            </div>\n            \n        </div>\n    );\n  }","import BinaryRiskMatrixForm from \"./BinaryRiskMatrixForm\";\n\nexport default function BinaryRiskMatrix() {\n    return (\n        <div>\n            <h1 className=\"PageTitle\">Binary Risk Matrix</h1>\n            <BinaryRiskMatrixForm />\n        </div>\n    );\n  }","import './css/App.css';\n\nimport BinaryRiskMatrix from './Components/BinaryRiskMatrix/BinaryRiskMatrix';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BinaryRiskMatrix />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}