{"version":3,"sources":["Components/BinaryRiskMatrix/BinaryRiskMatrixForm.js","Components/BinaryRiskMatrix/BinaryRiskMatrix.js","App.js","reportWebVitals.js","index.js"],"names":["BinaryRiskMatrixForm","useState","Q1","appendQ1","Q2","appendQ2","Q3","appendQ3","Q4","appendQ4","Q5","appendQ5","Q6","appendQ6","Q7","appendQ7","Q8","appendQ8","Q9","appendQ9","Q10","appendQ10","risk","appendRisk","likelihood","appendLikelihood","impact","appendImpact","handleChange","value","appendFn","calculateRisk","threatLikelihood","threatImpact","calculateLikelihood","threatScore","calculateThreatScope","protectionWeakness","calculateProtectionWeakness","attackEfficacy","calculateAttackEfficacy","calculateOccurrence","calculateImpact","harmCapacity","calculateHarmCapacity","calculateImpactValidation","className","onSubmit","e","preventDefault","handleSubmit","type","id","onChange","for","style","color","BinaryRiskMatrix","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5731d6e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport '../../css/App.css';\n\nexport default function BinaryRiskMatrixForm() {\n    \n    const [Q1, appendQ1] = useState(false);\n    const [Q2, appendQ2] = useState(false);\n    const [Q3, appendQ3] = useState(false);\n    const [Q4, appendQ4] = useState(false);\n    const [Q5, appendQ5] = useState(false);\n    const [Q6, appendQ6] = useState(false);\n    const [Q7, appendQ7] = useState(false);\n    const [Q8, appendQ8] = useState(false);\n    const [Q9, appendQ9] = useState(false);\n    const [Q10, appendQ10] = useState(false);\n\n    const [risk, appendRisk] = useState('Low')\n    const [likelihood, appendLikelihood] = useState('Low')\n    const [impact, appendImpact] = useState('Low')\n\n    const handleChange = (value, appendFn) => {\n        appendFn(!value);   \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        debugger;\n\n        const likelihood = calculateLikelihood();\n        const impact = calculateImpact();\n        const risk = calculateRisk(likelihood, impact);\n\n        appendRisk(risk);\n        appendLikelihood(likelihood);\n        appendImpact(impact);\n    }\n    \n    const calculateRisk = (threatLikelihood, threatImpact) => {\n        if (threatImpact === threatLikelihood) {\n            return threatLikelihood;\n        } else {\n            if ((threatLikelihood === 'High' && threatImpact === 'Medium') || (threatLikelihood === 'Medium' && threatImpact === 'High')) {\n                return 'High';\n            } else {\n                if ((threatLikelihood === 'High' && threatImpact === 'Low') || (threatLikelihood === 'Low' && threatImpact === 'Medium')) {\n                    return 'Medium';\n                } else {\n                    return 'Low';\n                }\n            }\n        }\n    }\n\n    const calculateLikelihood = () => {\n        const threatScore = calculateThreatScope();\n        const protectionWeakness = calculateProtectionWeakness(threatScore);\n        const attackEfficacy = calculateAttackEfficacy(protectionWeakness);\n        const occurrence = calculateOccurrence(attackEfficacy);\n\n        const threatLikelihood = occurrence;\n        return threatLikelihood;\n    }\n\n    const calculateThreatScope = () => {\n        if (Q1 === true && Q2 === true) {\n            return 'High'\n        } else {\n            if (Q1 === true || Q2 === true) {\n                return 'Medium';\n            } else {\n                return 'Low'\n            }\n        }\n    }\n\n    const calculateProtectionWeakness = (threatScore) => {\n        if (Q3 === true && Q4 === true) {\n            if (threatScore === 'Low'){\n                return 'Medium';\n            } else {\n                return 'High';\n            }\n        } else {\n            if (Q3 === true || Q4 === true) {\n                return threatScore;\n            } else {\n                if (threatScore === 'High') {\n                    return 'Medium'\n                } else {\n                    return 'Low'\n                }\n            }\n        }\n    }\n\n    const calculateAttackEfficacy = (protectionWeakness) => {\n        return protectionWeakness;\n    }\n\n    const calculateOccurrence = (attackEfficacy) => {\n        if (Q5 === true && Q6 === true) {\n            if (attackEfficacy === 'Low'){\n                return 'Medium';\n            } else {\n                return 'High';\n            }\n        } else {\n            if (Q5 === true || Q6 === true) {\n                return attackEfficacy;\n            } else {\n                if (attackEfficacy === 'High') {\n                    return 'Medium'\n                } else {\n                    return 'Low'\n                }\n            }\n        }\n    }\n\n    const calculateImpact = () => {\n        const harmCapacity = calculateHarmCapacity();\n        const impactValuation = calculateImpactValidation(harmCapacity);\n        \n        const threatImpact = impactValuation;\n        return threatImpact;\n    }\n\n    const calculateHarmCapacity = () => {\n        if (Q7 === true && Q8 === true){\n            return 'High'\n        } else {\n            if (Q7 === true || Q8 === true) {\n                return 'Medium'\n            } else {\n                return 'Low'\n            }\n        }\n    }\n\n    const calculateImpactValidation = (harmCapacity) => {\n        if (Q9 === false && Q10 === false) {\n            if (harmCapacity === 'High') {\n                return 'Medium';\n            } else {\n                return 'Low'\n            }\n        } else {\n            if (Q9 === true && Q10 === true){\n                if (harmCapacity === 'Low') {\n                    return 'Medium';\n                } else {\n                    return 'High'\n                }\n            } else {\n                if (Q9 === true || Q10 === true) {\n                    return harmCapacity;\n                }\n            }\n        }\n    }\n\n    return (\n        <div className=\"BinaryRiskMatrix\">\n            <form className=\"BinaryRiskMatrixForm\" onSubmit={(e) => handleSubmit(e)}> \n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q1' value={Q1} onChange={() => handleChange(Q1, appendQ1)}/>\n                    <label for='Q1'>Q1: Can the attack be completed with common skills?</label>\n                </div>\n                \n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q2' value={Q2} onChange={() => handleChange(Q2, appendQ2)}/>\n                    <label for='Q2'>Q2: Can the attack be completed without significant resources?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q3' value={Q3} onChange={() => handleChange(Q3, appendQ3)}/>\n                    <label for='Q3'>Q3: is the asset undefended?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q4' value={Q4} onChange={() => handleChange(Q4, appendQ4)}/>\n                    <label for='Q4'>Q4: Are there weaknesses in the current defences?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q5' value={Q5} onChange={() => handleChange(Q5, appendQ5)}/>\n                    <label for='Q5'>Q5: Is the vulnerability always present in the asset?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q6' value={Q6} onChange={() => handleChange(Q6, appendQ6)}/>\n                    <label for='Q6'>Q6: Can the attack be performed without meeting any significant preconditions?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q7' value={Q7} onChange={() => handleChange(Q7, appendQ7)}/>\n                    <label for='Q7'>Q7: Will there be consequences from internal sources? (e.g. explain to company board)</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q8' value={Q8} onChange={() => handleChange(Q8, appendQ8)}/>\n                    <label for='Q8'>Q8: Will there be consequences from external sources? (e.g. disclose to clients data theft)</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q9' value={Q9} onChange={() => handleChange(Q9, appendQ9)}/>\n                    <label for='Q9'>Q9: Does the asset have a significant business value?</label>\n                </div>\n\n                <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n                    <input type='checkbox' id='Q10' value={Q10} onChange={() => handleChange(Q10, appendQ10)}/>\n                    <label for='Q10'>Q10: Will the asset have a significant cost of repair or replacement?</label>\n                </div>\n                <div className=\"BinaryRiskMatrixForm-Submit\">\n                    <button className=\"BinaryRiskMatrixForm-SubmitButton\" type=\"submit\">Submit</button>\n                </div>\n            </form>\n\n            <div className=\"BinaryRiskMatrixResults\">\n                <h2 \n                    className=\"BinaryRiskMatrixResults-Measurement\"\n                    style={{color: risk === 'Low' ? 'Green' : risk === 'Medium' ? 'Orange' : 'Red'}}\n                >\n                    Risk: {risk}\n                </h2>\n                <h2 \n                    className=\"BinaryRiskMatrixResults-Measurement\"\n                    style={{color: likelihood === 'Low' ? 'Green' : likelihood === 'Medium' ? 'Orange' : 'Red'}}\n                >\n                    Likelihood: {likelihood}\n                </h2>\n                <h2 \n                    className=\"BinaryRiskMatrixResults-Measurement\"\n                    style={{color: impact === 'Low' ? 'Green' : impact === 'Medium' ? 'Orange' : 'Red'}}\n                >\n                    Impact: {impact}\n                </h2>\n            </div>\n            \n        </div>\n    );\n  }","import BinaryRiskMatrixForm from \"./BinaryRiskMatrixForm\";\n\nexport default function BinaryRiskMatrix() {\n    return (\n        <div>\n            <h1>Binary Risk Matrix</h1>\n            <BinaryRiskMatrixForm />\n        </div>\n    );\n  }","import './css/App.css';\n\nimport BinaryRiskMatrix from './Components/BinaryRiskMatrix/BinaryRiskMatrix';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BinaryRiskMatrix />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}