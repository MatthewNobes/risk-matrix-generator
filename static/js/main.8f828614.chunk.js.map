{"version":3,"sources":["features/BinaryRiskMatrix/BinaryRiskMatrixLogic/calculateImpact/calculateImpact.js","features/BinaryRiskMatrix/BinaryRiskMatrixLogic/calculateImpact/index.js","features/BinaryRiskMatrix/BinaryRiskMatrixLogic/calculateLikelihood/calculateLikelihood.js","features/BinaryRiskMatrix/BinaryRiskMatrixLogic/calculateLikelihood/index.js","features/BinaryRiskMatrix/BinaryRiskMatrixLogic/calculateRisk/index.js","features/BinaryRiskMatrix/BinaryRiskMatrixLogic/calculateRisk/calculateRisk.js","features/BinaryRiskMatrix/BinaryRiskMatrixForm/index.js","features/BinaryRiskMatrix/BinaryRiskMatrixForm/BinaryRiskMatrixForm.js","features/BinaryRiskMatrix/index.js","features/BinaryRiskMatrix/BinaryRiskMatrix.js","App.js","reportWebVitals.js","index.js"],"names":["calculateHarmCapacity","Q7","Q8","calculateImpactValidation","harmCapacity","Q9","Q10","calculateImpact","values","impactValuation","calculateThreatScope","Q1","Q2","calculateProtectionWeakness","threatScore","Q3","Q4","calculateAttackEfficiency","protectionWeakness","calculateOccurrence","attackEfficiency","Q5","Q6","calculateLikelihood","occurrence","calculateRisk","threatLikelihood","threatImpact","console","log","BinaryRiskMatrixForm","useState","appendQ1","appendQ2","appendQ3","appendQ4","appendQ5","appendQ6","appendQ7","appendQ8","appendQ9","appendQ10","risk","appendRisk","likelihood","appendLikelihood","impact","appendImpact","appendHarmCapacity","appendImpactValuation","appendThreatScore","appendProtectionWeakness","appendAttackEfficiency","appendOccurrence","handleChange","value","appendFn","className","onSubmit","e","preventDefault","likelihoodResults","impactResults","handleSubmit","type","id","onChange","for","style","color","BinaryRiskMatrix","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f828614.chunk.js","sourcesContent":["/**\n *\n * @param {string[]} values An array of the users answers for the questions on the binary risk matrix.\n * @returns {string} Threat Impact\n */\nexport const calculateImpact = (values) => {\n  const harmCapacity = calculateHarmCapacity(values[6], values[7]);\n  const impactValuation = calculateImpactValidation(\n    harmCapacity,\n    values[8],\n    values[9]\n  );\n\n  const threatImpact = impactValuation;\n  const impactResults = [harmCapacity, impactValuation, threatImpact];\n  return impactResults;\n};\n\n/**\n *\n * @param {boolean} Q7 The value of question 7, as set by the user.\n * @param {boolean} Q8 The value of question 8, as set by the user.\n * @returns {string} Harm Capacity\n */\nconst calculateHarmCapacity = (Q7, Q8) => {\n  if (Q7 === true && Q8 === true) {\n    return \"High\";\n  } else {\n    if (Q7 === true || Q8 === true) {\n      return \"Medium\";\n    } else {\n      return \"Low\";\n    }\n  }\n};\n\n/**\n *\n * @param {string} harmCapacity\n * @param {boolean} Q9 The value of question 9, as set by the user.\n * @param {boolean} Q10 The value of question 10, as set by the user.\n * @returns {string} Impact Validation\n */\nconst calculateImpactValidation = (harmCapacity, Q9, Q10) => {\n  if (Q9 === false && Q10 === false) {\n    if (harmCapacity === \"High\") {\n      return \"Medium\";\n    } else {\n      return \"Low\";\n    }\n  } else {\n    if (Q9 === true && Q10 === true) {\n      if (harmCapacity === \"Low\") {\n        return \"Medium\";\n      } else {\n        return \"High\";\n      }\n    } else {\n      if (Q9 === true || Q10 === true) {\n        return harmCapacity;\n      }\n    }\n  }\n};\n","import { calculateImpact } from \"./calculateImpact\";\nexport default calculateImpact;\n","/**\n *\n * @param {boolean[]} values The users selected values for the questions in the binary risk matrix.\n * @returns {string} The threat likelihood.\n */\nexport const calculateLikelihood = (values) => {\n  const threatScore = calculateThreatScope(values[0], values[1]);\n  const protectionWeakness = calculateProtectionWeakness(\n    threatScore,\n    values[2],\n    values[3]\n  );\n  const attackEfficiency = calculateAttackEfficiency(protectionWeakness);\n  const occurrence = calculateOccurrence(\n    attackEfficiency,\n    values[4],\n    values[5]\n  );\n\n  const threatLikelihood = occurrence;\n  const likelihoodResults = [\n    threatScore,\n    protectionWeakness,\n    attackEfficiency,\n    occurrence,\n    threatLikelihood,\n  ];\n  return likelihoodResults;\n};\n\n/**\n *\n * @param {boolean} Q1 The users answer for Q1.\n * @param {boolean} Q2 The users answer for Q2.\n * @returns {string} The threat scope\n */\nconst calculateThreatScope = (Q1, Q2) => {\n  if (Q1 === true && Q2 === true) {\n    return \"High\";\n  } else {\n    if (Q1 === true || Q2 === true) {\n      return \"Medium\";\n    } else {\n      return \"Low\";\n    }\n  }\n};\n\n/**\n *\n * @param {string} threatScore\n * @param {boolean} Q3\n * @param {boolean} Q4\n * @returns {string} The protection weakness\n */\nconst calculateProtectionWeakness = (threatScore, Q3, Q4) => {\n  if (Q3 === true && Q4 === true) {\n    if (threatScore === \"Low\") {\n      return \"Medium\";\n    } else {\n      return \"High\";\n    }\n  } else {\n    if (Q3 === true || Q4 === true) {\n      return threatScore;\n    } else {\n      if (threatScore === \"High\") {\n        return \"Medium\";\n      } else {\n        return \"Low\";\n      }\n    }\n  }\n};\n\n/**\n *\n * @param {string} protectionWeakness The protection weakness (see calculateProtectionWeakness)\n * @returns {string} The attack efficiency\n */\nconst calculateAttackEfficiency = (protectionWeakness) => {\n  return protectionWeakness;\n};\n\n/**\n *\n * @param {string} attackEfficiency The attack efficiency\n * @param {boolean} Q5 The answer to Q5.\n * @param {boolean} Q6 The answer to Q6.\n * @returns {string} The threat occurrence\n */\nconst calculateOccurrence = (attackEfficiency, Q5, Q6) => {\n  if (Q5 === true && Q6 === true) {\n    if (attackEfficiency === \"Low\") {\n      return \"Medium\";\n    } else {\n      return \"High\";\n    }\n  } else {\n    if (Q5 === true || Q6 === true) {\n      return attackEfficiency;\n    } else {\n      if (attackEfficiency === \"High\") {\n        return \"Medium\";\n      } else {\n        return \"Low\";\n      }\n    }\n  }\n};\n","import { calculateLikelihood } from \"./calculateLikelihood\";\nexport default calculateLikelihood;\n","import calculateRisk from \"./calculateRisk\";\nexport default calculateRisk;\n","/**\n * This function determines the overall risk combining everything else calculated.\n * @param {string} threatLikelihood The threat likelihood.\n * @param {string} threatImpact The threat impact.\n * @returns {string} The overall risk.\n */\nconst calculateRisk = (threatLikelihood, threatImpact) => {\n  console.log(\"impact\", threatImpact);\n  console.log(\"likelihood\", threatLikelihood);\n  if (threatImpact === threatLikelihood) {\n    return threatLikelihood;\n  } else {\n    if (\n      (threatLikelihood === \"High\" && threatImpact === \"Medium\") ||\n      (threatLikelihood === \"Medium\" && threatImpact === \"High\")\n    ) {\n      return \"High\";\n    } else {\n      if (\n        (threatLikelihood === \"High\" && threatImpact === \"Low\") ||\n        (threatLikelihood === \"Low\" && threatImpact === \"Medium\") ||\n        (threatLikelihood === \"Low\" && threatImpact === \"High\")\n      ) {\n        console.log(\"medium\");\n        return \"Medium\";\n      } else {\n        return \"Low\";\n      }\n    }\n  }\n};\n\nexport default calculateRisk;\n","import { BinaryRiskMatrixForm } from \"./BinaryRiskMatrixForm\";\nexport default BinaryRiskMatrixForm;\n","import { useState } from \"react\";\nimport \"../../../css/App.css\";\n\nimport calculateImpact from \"../BinaryRiskMatrixLogic/calculateImpact\";\nimport calculateLikelihood from \"../BinaryRiskMatrixLogic/calculateLikelihood\";\nimport calculateRisk from \"../BinaryRiskMatrixLogic/calculateRisk\";\n\nexport const BinaryRiskMatrixForm = () => {\n  const [Q1, appendQ1] = useState(false);\n  const [Q2, appendQ2] = useState(false);\n  const [Q3, appendQ3] = useState(false);\n  const [Q4, appendQ4] = useState(false);\n  const [Q5, appendQ5] = useState(false);\n  const [Q6, appendQ6] = useState(false);\n  const [Q7, appendQ7] = useState(false);\n  const [Q8, appendQ8] = useState(false);\n  const [Q9, appendQ9] = useState(false);\n  const [Q10, appendQ10] = useState(false);\n\n  const [risk, appendRisk] = useState(\"Low\");\n  const [likelihood, appendLikelihood] = useState(\"Low\");\n  const [impact, appendImpact] = useState(\"Low\");\n\n  const [harmCapacity, appendHarmCapacity] = useState(\"Low\");\n  const [impactValuation, appendImpactValuation] = useState(\"Low\");\n\n  const [threatScore, appendThreatScore] = useState(\"Low\");\n  const [protectionWeakness, appendProtectionWeakness] = useState(\"Low\");\n  const [attackEfficiency, appendAttackEfficiency] = useState(\"Low\");\n  const [occurrence, appendOccurrence] = useState(\"Low\");\n\n  const handleChange = (value, appendFn) => {\n    appendFn(!value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const values = [Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10];\n    const likelihoodResults = calculateLikelihood(values);\n    const impactResults = calculateImpact(values);\n\n    appendHarmCapacity(impactResults[0]);\n    appendImpactValuation(impactResults[1]);\n\n    appendThreatScore(likelihoodResults[0]);\n    appendProtectionWeakness(likelihoodResults[1]);\n    appendAttackEfficiency(likelihoodResults[2]);\n    appendOccurrence(likelihoodResults[3]);\n\n    appendLikelihood(likelihoodResults[4]);\n    appendImpact(impactResults[2]);\n\n    const risk = calculateRisk(likelihoodResults[4], impactResults[2]);\n    appendRisk(risk);\n  };\n\n  return (\n    <div className=\"BinaryRiskMatrix\">\n      <form className=\"BinaryRiskMatrixForm\" onSubmit={(e) => handleSubmit(e)}>\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q1\"\n            value={Q1}\n            onChange={() => handleChange(Q1, appendQ1)}\n          />\n          <label for=\"Q1\">\n            Q1: Can the attack be completed with common skills?\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q2\"\n            value={Q2}\n            onChange={() => handleChange(Q2, appendQ2)}\n          />\n          <label for=\"Q2\">\n            Q2: Can the attack be completed without significant resources?\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q3\"\n            value={Q3}\n            onChange={() => handleChange(Q3, appendQ3)}\n          />\n          <label for=\"Q3\">Q3: Is the asset undefended?</label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q4\"\n            value={Q4}\n            onChange={() => handleChange(Q4, appendQ4)}\n          />\n          <label for=\"Q4\">\n            Q4: Are there weaknesses in the current defences?\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q5\"\n            value={Q5}\n            onChange={() => handleChange(Q5, appendQ5)}\n          />\n          <label for=\"Q5\">\n            Q5: Is the vulnerability always present in the asset?\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q6\"\n            value={Q6}\n            onChange={() => handleChange(Q6, appendQ6)}\n          />\n          <label for=\"Q6\">\n            Q6: Can the attack be performed without meeting any significant\n            preconditions?\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q7\"\n            value={Q7}\n            onChange={() => handleChange(Q7, appendQ7)}\n          />\n          <label for=\"Q7\">\n            Q7: Will there be consequences from internal sources? (e.g. explain\n            to company board)\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q8\"\n            value={Q8}\n            onChange={() => handleChange(Q8, appendQ8)}\n          />\n          <label for=\"Q8\">\n            Q8: Will there be consequences from external sources? (e.g. disclose\n            to clients data theft)\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q9\"\n            value={Q9}\n            onChange={() => handleChange(Q9, appendQ9)}\n          />\n          <label for=\"Q9\">\n            Q9: Does the asset have a significant business value?\n          </label>\n        </div>\n\n        <div className=\"BinaryRiskMatrixForm-CheckboxBlock\">\n          <input\n            type=\"checkbox\"\n            id=\"Q10\"\n            value={Q10}\n            onChange={() => handleChange(Q10, appendQ10)}\n          />\n          <label for=\"Q10\">\n            Q10: Will the asset have a significant cost of repair or\n            replacement?\n          </label>\n        </div>\n        <div className=\"BinaryRiskMatrixForm-Submit\">\n          <button className=\"BinaryRiskMatrixForm-SubmitButton\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n\n      <div className=\"BinaryRiskMatrixResults\">\n        <h2\n          className=\"BinaryRiskMatrixResults-Measurement\"\n          style={{\n            color:\n              risk === \"Low\" ? \"Green\" : risk === \"Medium\" ? \"Orange\" : \"Red\",\n          }}\n        >\n          Risk: {risk}\n        </h2>\n\n        <h2\n          className=\"BinaryRiskMatrixResults-Measurement\"\n          style={{\n            color:\n              likelihood === \"Low\"\n                ? \"Green\"\n                : likelihood === \"Medium\"\n                ? \"Orange\"\n                : \"Red\",\n          }}\n        >\n          Likelihood: {likelihood}\n        </h2>\n        <ul>\n          <h3\n            className=\"BinaryRiskMatrixResults-Measurement\"\n            style={{\n              color:\n                threatScore === \"Low\"\n                  ? \"Green\"\n                  : threatScore === \"Medium\"\n                  ? \"Orange\"\n                  : \"Red\",\n            }}\n          >\n            Threat Score: {threatScore}\n          </h3>\n          <h3\n            className=\"BinaryRiskMatrixResults-Measurement\"\n            style={{\n              color:\n                protectionWeakness === \"Low\"\n                  ? \"Green\"\n                  : protectionWeakness === \"Medium\"\n                  ? \"Orange\"\n                  : \"Red\",\n            }}\n          >\n            Protection Weakness: {protectionWeakness}\n          </h3>\n          <h3\n            className=\"BinaryRiskMatrixResults-Measurement\"\n            style={{\n              color:\n                attackEfficiency === \"Low\"\n                  ? \"Green\"\n                  : attackEfficiency === \"Medium\"\n                  ? \"Orange\"\n                  : \"Red\",\n            }}\n          >\n            Attack Efficiency: {attackEfficiency}\n          </h3>\n          <h3\n            className=\"BinaryRiskMatrixResults-Measurement\"\n            style={{\n              color:\n                occurrence === \"Low\"\n                  ? \"Green\"\n                  : occurrence === \"Medium\"\n                  ? \"Orange\"\n                  : \"Red\",\n            }}\n          >\n            Occurrence: {occurrence}\n          </h3>\n        </ul>\n\n        <h2\n          className=\"BinaryRiskMatrixResults-Measurement\"\n          style={{\n            color:\n              impact === \"Low\"\n                ? \"Green\"\n                : impact === \"Medium\"\n                ? \"Orange\"\n                : \"Red\",\n          }}\n        >\n          Impact: {impact}\n        </h2>\n        <ul>\n          <h3\n            className=\"BinaryRiskMatrixResults-Measurement\"\n            style={{\n              color:\n                harmCapacity === \"Low\"\n                  ? \"Green\"\n                  : harmCapacity === \"Medium\"\n                  ? \"Orange\"\n                  : \"Red\",\n            }}\n          >\n            Harm Capacity: {harmCapacity}\n          </h3>\n          <h3\n            className=\"BinaryRiskMatrixResults-Measurement\"\n            style={{\n              color:\n                impactValuation === \"Low\"\n                  ? \"Green\"\n                  : impactValuation === \"Medium\"\n                  ? \"Orange\"\n                  : \"Red\",\n            }}\n          >\n            Impact Valuation: {impactValuation}\n          </h3>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { BinaryRiskMatrix } from \"./BinaryRiskMatrix\";\nexport default BinaryRiskMatrix;\n","import BinaryRiskMatrixForm from \"./BinaryRiskMatrixForm\";\n\nexport const BinaryRiskMatrix = () => (\n  <div>\n    <h1 className=\"PageTitle\">Binary Risk Matrix</h1>\n    <BinaryRiskMatrixForm />\n  </div>\n);\n","import \"./css/App.css\";\nimport BinaryRiskMatrix from \"./features/BinaryRiskMatrix\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <BinaryRiskMatrix />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}